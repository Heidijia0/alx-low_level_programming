#include "main.h"
#include <stdio.h>

int _putchar(char c) {
return putchar(c);
}

int _islower(int c) {
return (c >= 'a' && c <= 'z');
}

int _isalpha(int c) {
return ((_islower(c)) || (_isupper(c)));
}

int _abs(int n) {
return (n >= 0 ? n : -n);
}

int _isupper(int c) {
return (c >= 'A' && c <= 'Z');
}

int _isdigit(int c) {
return (c >= '0' && c <= '9');
}

int _strlen(char *s) {
int len = 0;
while (*s++)
len++;
return len;
}

void _puts(char *s) {
while (*s) {
_putchar(*s++);
}
_putchar('\n');
}

char *_strcpy(char *dest, char *src) {
char *ptr = dest;
while (*src != '\0') {
*dest++ = *src++;
}
*dest = '\0';
return ptr;
}

int _atoi(char *s) {
int sign = 1;
int resp = 0;
int i = 0;

if (s[i] == '-') {
sign = -1;
i++;
}

for (; s[i] != '\0'; i++) {
resp = resp * 10 + s[i] - '0';
}

return sign * resp;
}

char *_strcat(char *dest, char *src) {
int i = 0, j = 0;

while (dest[i] != '\0') {
i++;
}

while (src[j] != '\0') {
dest[i] = src[j];
i++;
j++;
}

dest[i] = '\0';

return dest;
}

char *_strncat(char *dest, char *src, int n) {
int i = 0, j = 0;

while (dest[i] != '\0') {
i++;
}

while (j < n && src[j] != '\0') {
dest[i] = src[j];
i++;
j++;
}

dest[i] = '\0';

return dest;
}

char *_strncpy(char *dest, char *src, int n) {
int i = 0;

while (i < n && src[i] != '\0') {
dest[i] = src[i];
i++;
}

while (i < n) {
dest[i] = '\0';
i++;
}

return dest;
}

int _strcmp(char *s1, char *s2) {
while(*s1 && *s1 == *s2) {
s1++;
s2++;
}

return *s1 - *s2;
}

char *_memset(char *s, char b, unsigned int n) {
unsigned int i;
for (i = 0; i < n; i++) {
s[i] = b;
}
return s;
}

char *_memcpy(char *dest, char *src, unsigned int n) {
unsigned int i;
for (i = 0; i < n; i++) {
dest[i] = src[i];
}
return dest;
}

char *_strchr(char *s, char c) {
while (*s != '\0' && *s != c) {
s++;
}
if (*s == c) {
return s;
}
return NULL;
}

unsigned int _strspn(char *s, char *accept) {
unsigned int count = 0;
char *str1, *str2;
for (str1 = s; *str1 != '\0'; str1++) {
for (str2 = accept; *str2 != '\0'; str2++) {
if (*str1 == *str2) {
count++;
break;
}
}
if (*str2 == '\0') {
return count;
}
}
return count;
}

char *_strpbrk(char *s, char *accept) {
while (*s != '\0') {
char *a = accept;
while (*a != '\0') {
if (*s == *a) {
return s;
}
a++;
}
s++;
}
return NULL;
}

char *_strstr(char *haystack, char *needle) {
char *h;
char *n;

while (*haystack != '\0') {
h = haystack;
n = needle;

Copy
while (*h != '\0' && *n != '\0' && *h == *n) {
  h++;
  n++;
}

if (*n == '\0') {
  return haystack;
}

haystack++;
}

return NULL;
}
